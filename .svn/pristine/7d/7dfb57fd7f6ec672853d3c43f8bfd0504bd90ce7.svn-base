'\" t
.\"     Title: SET TRANSACTION
.\"    Author: The PostgreSQL Global Development Group
.\" Generator: DocBook XSL Stylesheets v1.75.2 <http://docbook.sf.net/>
.\"      Date: 2012-05-31
.\"    Manual: PostgreSQL 9.1.4 Documentation
.\"    Source: PostgreSQL 9.1.4
.\"  Language: English
.\"
.TH "SET TRANSACTION" "7" "2012-05-31" "PostgreSQL 9.1.4" "PostgreSQL 9.1.4 Documentation"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
SET_TRANSACTION \- set the characteristics of the current transaction
.\" SET TRANSACTION
.\" transaction isolation level: setting
.\" read-only transaction: setting
.\" deferrable transaction: setting
.SH "SYNOPSIS"
.sp
.nf
SET TRANSACTION \fItransaction_mode\fR [, \&.\&.\&.]
SET SESSION CHARACTERISTICS AS TRANSACTION \fItransaction_mode\fR [, \&.\&.\&.]

where \fItransaction_mode\fR is one of:

    ISOLATION LEVEL { SERIALIZABLE | REPEATABLE READ | READ COMMITTED | READ UNCOMMITTED }
    READ WRITE | READ ONLY
    [ NOT ] DEFERRABLE
.fi
.SH "DESCRIPTION"
.PP
The
SET TRANSACTION
command sets the characteristics of the current transaction\&. It has no effect on any subsequent transactions\&.
SET SESSION CHARACTERISTICS
sets the default transaction characteristics for subsequent transactions of a session\&. These defaults can be overridden by
SET TRANSACTION
for an individual transaction\&.
.PP
The available transaction characteristics are the transaction isolation level, the transaction access mode (read/write or read\-only), and the deferrable mode\&.
.PP
The isolation level of a transaction determines what data the transaction can see when other transactions are running concurrently:
.PP
READ COMMITTED
.RS 4
A statement can only see rows committed before it began\&. This is the default\&.
.RE
.PP
REPEATABLE READ
.RS 4
All statements of the current transaction can only see rows committed before the first query or data\-modification statement was executed in this transaction\&.
.RE
.PP
SERIALIZABLE
.RS 4
All statements of the current transaction can only see rows committed before the first query or data\-modification statement was executed in this transaction\&. If a pattern of reads and writes among concurrent serializable transactions would create a situation which could not have occurred for any serial (one\-at\-a\-time) execution of those transactions, one of them will be rolled back with a
serialization_failure
SQLSTATE\&.
.RE
The SQL standard defines one additional level,
READ UNCOMMITTED\&. In
PostgreSQL
READ UNCOMMITTED
is treated as
READ COMMITTED\&.
.PP
The transaction isolation level cannot be changed after the first query or data\-modification statement (SELECT,
INSERT,
DELETE,
UPDATE,
FETCH, or
COPY) of a transaction has been executed\&. See
Chapter 13, Concurrency Control, in the documentation
for more information about transaction isolation and concurrency control\&.
.PP
The transaction access mode determines whether the transaction is read/write or read\-only\&. Read/write is the default\&. When a transaction is read\-only, the following SQL commands are disallowed:
INSERT,
UPDATE,
DELETE, and
COPY FROM
if the table they would write to is not a temporary table; all
CREATE,
ALTER, and
DROP
commands;
COMMENT,
GRANT,
REVOKE,
TRUNCATE; and
EXPLAIN ANALYZE
and
EXECUTE
if the command they would execute is among those listed\&. This is a high\-level notion of read\-only that does not prevent all writes to disk\&.
.PP
The
DEFERRABLE
transaction property has no effect unless the transaction is also
SERIALIZABLE
and
READ ONLY\&. When all of these properties are set on a transaction, the transaction may block when first acquiring its snapshot, after which it is able to run without the normal overhead of a
SERIALIZABLE
transaction and without any risk of contributing to or being canceled by a serialization failure\&. This mode is well suited for long\-running reports or backups\&.
.SH "NOTES"
.PP
If
SET TRANSACTION
is executed without a prior
START TRANSACTION
or
BEGIN, it will appear to have no effect, since the transaction will immediately end\&.
.PP
It is possible to dispense with
SET TRANSACTION
by instead specifying the desired
\fItransaction_modes\fR
in
BEGIN
or
START TRANSACTION\&.
.PP
The session default transaction modes can also be set by setting the configuration parameters
default_transaction_isolation,
default_transaction_read_only, and
default_transaction_deferrable\&. (In fact
SET SESSION CHARACTERISTICS
is just a verbose equivalent for setting these variables with
SET\&.) This means the defaults can be set in the configuration file, via
ALTER DATABASE, etc\&. Consult
Chapter 18, Server Configuration, in the documentation
for more information\&.
.SH "COMPATIBILITY"
.PP
Both commands are defined in the
SQL
standard\&.
SERIALIZABLE
is the default transaction isolation level in the standard\&. In
PostgreSQL
the default is ordinarily
READ COMMITTED, but you can change it as mentioned above\&.
.PP
In the SQL standard, there is one other transaction characteristic that can be set with these commands: the size of the diagnostics area\&. This concept is specific to embedded SQL, and therefore is not implemented in the
PostgreSQL
server\&.
.PP
The
DEFERRABLE
\fItransaction_mode\fR
is a
PostgreSQL
language extension\&.
.PP
The SQL standard requires commas between successive
\fItransaction_modes\fR, but for historical reasons
PostgreSQL
allows the commas to be omitted\&.
